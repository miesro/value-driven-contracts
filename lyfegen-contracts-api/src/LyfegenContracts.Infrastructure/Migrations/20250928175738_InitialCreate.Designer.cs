// <auto-generated />
using System;
using LyfegenContracts.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LyfegenContracts.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250928175738_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LyfegenContracts.Domain.Domain.Contracts.Contract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("BrandedProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("ManufacturerId")
                        .HasColumnType("bigint");

                    b.Property<int>("MaxAgeExclusive")
                        .HasColumnType("integer");

                    b.Property<int>("MaxStage")
                        .HasColumnType("integer");

                    b.Property<int>("MinStage")
                        .HasColumnType("integer");

                    b.Property<int>("OSMonths")
                        .HasColumnType("integer");

                    b.Property<int>("OsAfterMonthsRate")
                        .HasColumnType("integer");

                    b.Property<int>("OsBeforeMonthsRate")
                        .HasColumnType("integer");

                    b.Property<int>("PFSMonths")
                        .HasColumnType("integer");

                    b.Property<long>("PayerId")
                        .HasColumnType("bigint");

                    b.Property<int>("PfsAfterMonthsRate")
                        .HasColumnType("integer");

                    b.Property<int>("PfsBeforeMonthsRate")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BrandedProductId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("PayerId");

                    b.ToTable("Contracts", (string)null);
                });

            modelBuilder.Entity("LyfegenContracts.Domain.Domain.Parties.Manufacturer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers", (string)null);
                });

            modelBuilder.Entity("LyfegenContracts.Domain.Domain.Parties.Payer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Payers", (string)null);
                });

            modelBuilder.Entity("LyfegenContracts.Domain.Domain.Patients.Patient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int>("CancerStage")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Patients", (string)null);
                });

            modelBuilder.Entity("LyfegenContracts.Domain.Domain.Products.BrandedProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("BrandedProducts", (string)null);
                });

            modelBuilder.Entity("LyfegenContracts.Domain.Domain.Products.MedicinalProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("BrandedProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("StrengthMgPerMl")
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("BrandedProductId");

                    b.ToTable("MedicinalProducts", (string)null);
                });

            modelBuilder.Entity("LyfegenContracts.Domain.Domain.Products.ProductPack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("BasePriceChf")
                        .HasColumnType("numeric(18,2)");

                    b.Property<long>("MedicinalProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Units")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MedicinalProductId");

                    b.ToTable("ProductPacks", (string)null);
                });

            modelBuilder.Entity("LyfegenContracts.Domain.Domain.Treatments.Treatment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<int>("DurationMonths")
                        .HasColumnType("integer");

                    b.Property<long>("PatientId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductPackId")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("StartDateUtc")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("PatientId");

                    b.HasIndex("ProductPackId");

                    b.ToTable("Treatments", (string)null);
                });

            modelBuilder.Entity("LyfegenContracts.Domain.Domain.Treatments.TreatmentOutcome", b =>
                {
                    b.Property<long>("TreatmentId")
                        .HasColumnType("bigint");

                    b.Property<DateOnly?>("DeathDateUtc")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<decimal>("PayableAmountChf")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("PaymentRate")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("ProgressionDateUtc")
                        .HasColumnType("date");

                    b.Property<decimal>("RefundAmountChf")
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("TreatmentId");

                    b.ToTable("TreatmentOutcomes", (string)null);
                });

            modelBuilder.Entity("LyfegenContracts.Domain.Domain.Contracts.Contract", b =>
                {
                    b.HasOne("LyfegenContracts.Domain.Domain.Products.BrandedProduct", "BrandedProduct")
                        .WithMany()
                        .HasForeignKey("BrandedProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LyfegenContracts.Domain.Domain.Parties.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LyfegenContracts.Domain.Domain.Parties.Payer", "Payer")
                        .WithMany()
                        .HasForeignKey("PayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BrandedProduct");

                    b.Navigation("Manufacturer");

                    b.Navigation("Payer");
                });

            modelBuilder.Entity("LyfegenContracts.Domain.Domain.Products.MedicinalProduct", b =>
                {
                    b.HasOne("LyfegenContracts.Domain.Domain.Products.BrandedProduct", "BrandedProduct")
                        .WithMany("MedicinalProducts")
                        .HasForeignKey("BrandedProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BrandedProduct");
                });

            modelBuilder.Entity("LyfegenContracts.Domain.Domain.Products.ProductPack", b =>
                {
                    b.HasOne("LyfegenContracts.Domain.Domain.Products.MedicinalProduct", "MedicinalProduct")
                        .WithMany("ProductPacks")
                        .HasForeignKey("MedicinalProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MedicinalProduct");
                });

            modelBuilder.Entity("LyfegenContracts.Domain.Domain.Treatments.Treatment", b =>
                {
                    b.HasOne("LyfegenContracts.Domain.Domain.Contracts.Contract", "Contract")
                        .WithMany("Treatments")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LyfegenContracts.Domain.Domain.Patients.Patient", "Patient")
                        .WithMany("Treatments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LyfegenContracts.Domain.Domain.Products.ProductPack", "ProductPack")
                        .WithMany()
                        .HasForeignKey("ProductPackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");

                    b.Navigation("Patient");

                    b.Navigation("ProductPack");
                });

            modelBuilder.Entity("LyfegenContracts.Domain.Domain.Treatments.TreatmentOutcome", b =>
                {
                    b.HasOne("LyfegenContracts.Domain.Domain.Treatments.Treatment", "Treatment")
                        .WithOne("TreatmentOutcome")
                        .HasForeignKey("LyfegenContracts.Domain.Domain.Treatments.TreatmentOutcome", "TreatmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Treatment");
                });

            modelBuilder.Entity("LyfegenContracts.Domain.Domain.Contracts.Contract", b =>
                {
                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("LyfegenContracts.Domain.Domain.Patients.Patient", b =>
                {
                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("LyfegenContracts.Domain.Domain.Products.BrandedProduct", b =>
                {
                    b.Navigation("MedicinalProducts");
                });

            modelBuilder.Entity("LyfegenContracts.Domain.Domain.Products.MedicinalProduct", b =>
                {
                    b.Navigation("ProductPacks");
                });

            modelBuilder.Entity("LyfegenContracts.Domain.Domain.Treatments.Treatment", b =>
                {
                    b.Navigation("TreatmentOutcome");
                });
#pragma warning restore 612, 618
        }
    }
}
